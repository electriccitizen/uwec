#!/bin/bash
set -eo pipefail

# Cut gitignore at the cut mark.
terminus build:gitignore:cut

# Authenticate with Terminus
terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

# Defensive guard: never try to create a multidev called dev/test/live
if [[ "$TERMINUS_ENV" =~ ^(dev|test|live)$ ]]; then
  # Default branch deploy (or any case where we explicitly target a fixed env)
  terminus -n build:env:push "$TERMINUS_SITE.dev" --yes
else
  # Non-default branch (multidev) deploy
  terminus -n build:env:create "$TERMINUS_SITE.dev" "$TERMINUS_ENV" --yes
fi

# Update the Drupal database
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- updatedb -y

# If exported configuration is available, then import it.
if [ -f "config/system.site.yml" ] ; then
  terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- config-import --yes
fi

# Clear Drupal cache
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- cr

# Clear the environment cache
terminus -n env:clear-cache "$TERMINUS_SITE.$TERMINUS_ENV"

# Ensure secrets are set
terminus -n secrets:set "$TERMINUS_SITE.$TERMINUS_ENV" token "$GITHUB_TOKEN" --file='github-secrets.json' --clear --skip-if-empty

# PR cleanup (kept for legacy PR-named envs)
terminus -n build:env:delete:pr "$TERMINUS_SITE" --yes

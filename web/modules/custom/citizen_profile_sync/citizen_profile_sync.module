<?php

/**
 * @file
 * Primary module hooks for Citizen Profile Sync module.
 */

/**
 * Cron job to connect to profiles endpoint and
 *  sync to Profiles content type
 */
function citizen_profile_sync_cron() {
  $profileSyncService = \Drupal::service('citizen_profile_sync.profile_sync_service');

  $http_client = \Drupal::httpClient();

  $url = "https://athena.apps.uwec.edu/api/profiles.json";

  $apikey = '36dadd0fab31edb063666ef8f43e595d';

  $query_string = '?apikey=' . $apikey;
  $active_query_string = $query_string . '&isactive=1';

  //todo add try-catch block
  $response = $http_client->get($url . $active_query_string);

  if ($response->getStatusCode() == 200) {
    // Process the response body.
    $data = json_decode($response->getBody());
    // Do something with $data.
    $profiles = (array) $data;

    $profileSyncService->syncProfiles($profiles);
  }
  else {
    // Handle the error, e.g., log it or throw an exception.
    \Drupal::logger('citizen_profile_sync')
      ->error('Error accessing API: @code - @message', [
        '@code' => $response->getStatusCode(),
        '@message' => $response->getReasonPhrase(),
      ]);
  }

  $inactive_query_string = $query_string . '&isactive=0';

  $response = $http_client->get($url . $inactive_query_string);

  if ($response->getStatusCode() == 200) {

    $data = json_decode($response->getBody());

    $inactive_profiles = (array) $data;

    $profileSyncService->deactivateProfiles($inactive_profiles);


  }
  else {
    // Handle the error, e.g., log it or throw an exception.
    \Drupal::logger('citizen_profile_sync')
      ->error('Error accessing API: @code - @message', [
        '@code' => $response->getStatusCode(),
        '@message' => $response->getReasonPhrase(),
      ]);
  }
}

function citizen_profile_sync_form_node_bios_edit_form_alter(&$form, $form_state, $form_id) {
  /* Find the current user */
  $user = \Drupal::currentUser();
  $userId = $user->id();
  if ($userId != 1) {
    $sync_fields = [
      'field_athena_id',
      'field_active',
      'field_username',
      'field_email',
      'field_phone',
      'field_first_name',
      'field_last_name',
      'field_position',
      'field_import_date',
    ];

     foreach ($sync_fields as $field_name) {
       if (isset($form[$field_name])) {
         $form[$field_name]['#disabled'] = TRUE;
       }
     }
  }
}

function citizen_profile_sync_form_user_form_alter(&$form, $form_state, $form_id) {
  /* Find the current user */
  $user = \Drupal::currentUser();
  $userId = $user->id();
  if ($userId != 1) {
    $form['account']['mail']['#disabled'] = TRUE;

    $sync_fields = [
      'field_first_name',
      'field_last_name',
      'field_last_imported',
    ];

    foreach ($sync_fields as $field_name) {
      if (isset($form[$field_name])) {
        $form[$field_name]['#disabled'] = TRUE;
      }
    }
  }

}
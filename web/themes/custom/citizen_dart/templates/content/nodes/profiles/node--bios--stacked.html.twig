{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{% set classes = [
  'node-stacked',
  'node-stacked-' ~ node.type.0.target_id|clean_class,
] %}

{% if elements['#node'].published %}

  {{ attach_library('citizen_dart/list-view') }}

  <article{{ attributes.addClass(classes) }}>
    <div class="stacked-intro">
      {% if content.field_image.0 %}
        {{ content.field_image }}
      {% else %}
        <div class="field-image profile-favicon">
          {% set imagePath = '/themes/custom/citizen_dart/images/logos-badges/profile-favicon' %}
          <picture>
            <!--[if IE 9]><video style="display: none;"><![endif]-->
            <source
              srcset="{{ imagePath }}/profile-favicon-426-508.jpg 1x, {{ imagePath }}/profile-favicon-426-508-2.jpg 2x, {{ imagePath }}/profile-favicon-426-508-1-5.jpg 1.5x"
              type="image/jpg"
              width="426"
              height="508">
            <img
              loading="eager"
              src="{{ imagePath }}/profile-favicon-426-508.jpg"
              alt="UWEC wordlogo stacked as a placeholder image">
          </picture>
        </div>
      {% endif %}

      {% if content.field_is_alumni.0['#markup'] == 'Alumnus' or content.field_emeriti_status.0['#markup'] != 'not_emeritus' %}
        <div class="profile-stacked-icons">
          {% if content.field_is_alumni.0['#markup'] == 'Alumnus' %}
            <div class="alumni-wrapper profile-stacked-icon">
              <div class="icon-wrapper">
                <svg width="15" height="16" viewbox="0 0 15 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clip-path="url(#clip0_3887_16174)">
                    <path d="M0.619995 0.619141H14.14" stroke="white" stroke-width="1.25" stroke-miterlimit="10" stroke-linecap="round"/>
                    <path d="M2.87 3.96914V0.619141" stroke="white" stroke-width="1.25" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M11.89 0.619141V7.92914V15.2391L7.38 11.2891L2.87 15.2391V7.92914V6.72914" stroke="white" stroke-width="1.25" stroke-linecap="round" stroke-linejoin="round"/>
                  </g>
                  <defs>
                    <clipPath id="clip0_3887_16174">
                      <rect width="14.76" height="15.86" fill="white"/>
                    </clipPath>
                  </defs>
                </svg>
              </div>
              <div class="field field-is-alumni list-string">Alum</div>
            </div>
          {% endif %}

          {% if content.field_emeriti_status.0['#markup'] != 'not_emeritus' %}
            <div class="emeritus-wrapper profile-stacked-icon">
              <div class="icon-wrapper">
                <svg width="15" height="16" viewbox="0 0 15 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clip-path="url(#clip0_3887_16172)">
                    <path d="M1.01999 8.82086C1.64999 11.6209 3.23999 14.6909 7.09999 15.3409H7.12999C14.57 14.1009 13.56 3.87086 13.56 3.87086C13.56 3.87086 10.81 4.09086 7.12999 0.630859H7.09999C3.41999 4.09086 0.669993 3.87086 0.669993 3.87086C0.669993 3.87086 0.579993 4.78086 0.649993 6.09086" stroke="white" stroke-width="1.25" stroke-linecap="round" stroke-linejoin="round"/>
                  </g>
                  <defs>
                    <clipPath id="clip0_3887_16172">
                      <rect width="14.24" height="15.96" fill="white"/>
                    </clipPath>
                  </defs>
                </svg>
              </div>
              <div class="field field-emeriti-status list-string">Emeritus</div>
            </div>
          {% endif %}
        </div>
      {% endif %}
    </div>{# end stacked inbtro#}

    <div class="stacked-text">
      <div class="stacked-text-header">
        <div class="stacked-title">
          <a href="{{ path('entity.node.canonical', {'node':node.nid.0.value}) }}">
            {% if node.field_prefixes.0 %}
              <span class="prefixes">{{ node.field_prefixes.0.value }}</span>
            {% endif %}
            {% if node.field_first_override.0 %}
              {{ node.field_first_override.0.value }}
            {% else %}
              {{ node.field_first_name.0.value }}
            {% endif %}
            {%- if node.field_middle_name.0 -%}
              {{ node.field_middle_name.0.value }}
            {% endif %}
            {% if node.field_last_override.0 %}
              {{ node.field_last_override.0.value -}}
            {%- else -%}
              {{ node.field_last_name.0.value -}}
            {%- endif -%}
            {%- if node.field_suffixes.0 -%}
              <span class="suffixes">, {{ node.field_suffixes.0.value }}</span>
            {% endif %}
          </a>
        </div>

        {{ content.field_pronouns }}

        {{ content.field_departments }}

        {% if content.field_position_override.0 %}
          {{ content.field_position_override }}
        {% elseif content.field_position.0 %}
          {{ content.field_position }}
        {% endif %}
      </div> {# end stacked text header #}
      <div class="stacked-text-contact">
        <div class="stacked-contact-left">
          {{ content.field_office }}

          {% if node.field_show_phone.string %}
            {{ content.field_phone }}
          {% endif %}

          {% if node.field_show_email.string %}
            {{ content.field_email }}
          {% endif %}
        </div>
        {{ content.field_office_hours }}
      </div>
      {{ content.field_short_bio }}
    </div> {# end profile stacked text #}
  </article>

{% endif %}

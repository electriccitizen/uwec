{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% extends 'paragraph.html.twig' %}

{% block widgetContent %}
  {{ attach_library('citizen_dart/galleries') }}
  {% set galleryStyle = content.field_gallery_style.0['#markup']|clean_class %}
  <div class="gallery-style {{ galleryStyle }}" >
	  <div class="gallery-wrapper">
	    {% if 'tiles' in galleryStyle %}
	    	{% block lightboxContent %}
		      {{ attach_library('citizen_dart/featherlight') }}
		      {%- for key, item in content.field_gallery_items -%}
		        {%- if key|first != '#' and item['#paragraph'].field_image.0.target_id > 0 -%}
		          <div class="featherlight-gal image-gal" href="#item{{ item['#paragraph'].field_image.0.target_id }}" rel="gallery-{{ paragraph.id.value }}">
                {{ drupal_entity('media', item['#paragraph'].field_image.0.target_id, 'square') }}
		            <div class="featherlight-hidden" id="item{{ item['#paragraph'].field_image.0.target_id }}">
                  <div class="featherlight-slide">
                    <div class="featherlight-counter">{{key + 1}}<span>/</span>{{content.field_gallery_items['#items']|length}}</div>
                    {{ drupal_entity('media', item['#paragraph'].field_image.0.target_id, '650x650') }}
                    <div class="featherlight-caption">
                      {% if item['#paragraph'].field_caption_headline.0.value %}
                        <div class="field field-caption-headline string">{{ item['#paragraph'].field_caption_headline.0.value }}</div>
                      {% endif %}
                      {% if item['#paragraph'].field_caption.0.value %}
                        <div class="field field-caption string-long">{{ item['#paragraph'].field_caption.0.value }}</div>
                      {% endif %}
                    </div>
                  </div>
		            </div>
		          </div>
		        {%- endif -%}
		      {%- endfor -%}
		    {% endblock %}
	    {% elseif 'slider' in galleryStyle %}
	      {% block sliderContent %}
	        {{ attach_library('citizen_dart/slick') }}
					<div class="field-gallery-items">
						{%- for key, item in content.field_gallery_items -%}
							{%- if key|first != '#' and item['#paragraph'].field_image.0.target_id > 0 -%}
								<div class="slider-wrapper">
                  <div class="slide-inner-wrapper">
                    <div class="slider-image">
                      {{ drupal_entity('media', item['#paragraph'].field_image.0.target_id, '1096x619') }}
                    </div>
                    <div class="slide-meta">
                      <div class="slide-counter">{{key + 1}}/{{content.field_gallery_items['#items']|length}}</div>
                      {% if item['#paragraph'].field_caption_headline.0.value or item['#paragraph'].field_caption.0.value %}
                        <div class="slide-caption">
                          {% if item['#paragraph'].field_caption_headline.0.value %}
                            <div class="field field-caption-headline string">{{ item['#paragraph'].field_caption_headline.0.value }}</div>
                          {% endif %}
                          {% if item['#paragraph'].field_caption.0.value %}
                            <div class="field field-caption string-long">{{ item['#paragraph'].field_caption.0.value }}</div>
                          {% endif %}
                        </div>
                      {% endif %}
                    </div>
                  </div>
								</div>
							{% endif %}
						{% endfor %}
					</div>	
	      {% endblock %}
      {% elseif 'masonry' in galleryStyle %}
				{% block masonryContent %}
					{{ attach_library('citizen_dart/masonry') }}
					{# Initialize an empty array to store items with size class #}
					{% set itemsWithClass = [] %}

					{# Assign size class to each item and add to the array #}
					{%- for key, item in content.field_gallery_items -%}
						{%- if key|first != '#' and item['#paragraph'].field_image.0.target_id > 0 -%}
							{% set size_class = (loop.index is odd) ? 'small' : 'large' %}
							{% set itemsWithClass = itemsWithClass|merge([{ 'item': item, 'class': size_class }]) %}
						{%- endif -%}
					{%- endfor -%}

					{# Shuffle the array of items with their assigned classes #}
					{% set shuffledItems = itemsWithClass|shuffle %}

					{# Render the shuffled items #}
					{%- for itemWithClass in shuffledItems -%}
						{% set image_id = itemWithClass.item['#paragraph'].field_image.0.target_id %}
						{% set image_style = (itemWithClass.class == 'small') ? '200x200_non_crop' : '600x600_non_crop' %}
						<div class="masonry-item {{ itemWithClass.class }}">
							{{ drupal_entity('media', image_id, image_style) }}
						</div>
					{%- endfor -%}
				{% endblock %}
	    {% endif %}
	  </div>
	</div>
{% endblock %}

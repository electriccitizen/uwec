{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% extends 'paragraph.html.twig' %}

{% block widgetContent %}
  {%- set alignment = paragraph.field_alignment.value -%}
  {%- set size = paragraph.field_size.value -%}
  {%- set imageId = paragraph.field_image.0.target_id -%}
  <div class="caption-{{ alignment }}">
    <div class="image-wrapper size-{{ size }}">
      {% if alignment == 'none' and size == 'full' %}
        <div class="gold-stripes">
          <svg width="76" height="136" viewBox="0 0 76 136" fill="none" xmlns="http://www.w3.org/2000/svg">
            <mask id="mask0_1941_40267" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="78" height="136">
              <path d="M77.3598 0H0.517578V136H77.3598V0Z" fill="white"/>
            </mask>
            <g mask="url(#mask0_1941_40267)">
              <path d="M78.3844 95.5945L-4.83398 119.457L-0.62315 134.142L82.5952 110.279L78.3844 95.5945Z" fill="#EDAC1A"/>
              <path d="M78.3825 63.8445L-4.83594 87.707L-0.625102 102.392L82.5933 78.5295L78.3825 63.8445Z" fill="#EDAC1A"/>
              <path d="M78.3844 32.0965L-4.83398 55.959L-0.623149 70.6439L82.5952 46.7814L78.3844 32.0965Z" fill="#EDAC1A"/>
              <path d="M78.3864 0.346493L-4.83203 24.209L-0.621195 38.8939L82.5972 15.0314L78.3864 0.346493Z" fill="#EDAC1A"/>
            </g>
          </svg>
        </div>
      {% endif %}
      {% if size == 'full' %}
        {{ drupal_entity('media', imageId, '874x492') }}
      {% elseif size == 'large' %}
        {{ drupal_entity('media', imageId, '600x600_non_crop') }}
      {% elseif size == 'medium' %}
        {{ drupal_entity('media', imageId, '400x400_non_crop') }}
      {% elseif size == 'small' %}
        {{ drupal_entity('media', imageId, '200x200_non_crop') }}
      {% endif %}
    </div>  
    {% if alignment != 'none' %}
      <div class="caption">
        {{ content.field_caption_headline }}
        {{ content.field_caption }}
      </div>
    {% endif %}  
  </div>
{% endblock %}



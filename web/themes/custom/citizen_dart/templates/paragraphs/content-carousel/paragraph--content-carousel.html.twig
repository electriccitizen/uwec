{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% extends 'paragraph.html.twig' %}

{% block widgetContent %}
    {{ attach_library('citizen_dart/content-carousel') }}

    {% set showMe = [] %}
    {% set count = content.field_how_many.0['#markup'] %}
    {% for item in content.field_list_widgets['#items'] %}
        {% set showItem = null %}
        {% set showItem2 = null %}

        {% if item.entity.label == 'Snapshot' %}
            {% set viewOutput = drupal_view('snapshots','most_recent') %}
            {% if viewOutput|render|striptags|trim|length > 0 and viewOutput not in showMe %}
                {% set showItem = viewOutput %}
                {% if count == '2' %}
                    {% set showItem2 = drupal_view('snapshots','second_recent') %}
                {% endif %}
            {% endif %}
        {% endif %}

        {% if item.entity.label == 'Story' %}
            {% set viewOutput = drupal_view('news','most_recent') %}
            {% if viewOutput|render|striptags|trim|length > 0 and viewOutput not in showMe %}
                {% set showItem = viewOutput %}
                {% if count == '2' %}
                    {% set showItem2 = drupal_view('news','second_recent') %}
                {% endif %}
            {% endif %}
        {% endif %}

        {% if item.entity.label == 'Testimonial' %}
            {% set viewOutput = drupal_view('testimonials','most_recent') %}
            {% if viewOutput|render|striptags|trim|length > 0 and viewOutput not in showMe %}
                {% set showItem = viewOutput %}
                {% if count == '2' %}
                    {% set showItem2 = drupal_view('testimonials','second_recent') %}
                {% endif %}
            {% endif %}
        {% endif %}

        {% if item.entity.label == 'Video Card' %}
            {% set viewOutput = drupal_view('video_cards','most_recent') %}
            {% if viewOutput|render|striptags|trim|length > 0 and viewOutput not in showMe %}
                {% set showItem = viewOutput %}
                {% if count == '2' %}
                    {% set showItem2 = drupal_view('video_cards','second_recent') %}
                {% endif %}
            {% endif %}
        {% endif %}

        {% if showItem or showItem2 %}
            {% set showMe = showMe|merge([showItem, showItem2]) %}
        {% endif %}
    {% endfor %}
    {{ showMe|shuffle }}
{% endblock %}
